definitions:
  gin.H:
    additionalProperties: {}
    type: object
  models.Kermesse:
    properties:
      id:
        type: integer
      name:
        type: string
      organisateurs:
        description: 'Relations Many-to-Many : Organisateurs et participants de la
          kermesse'
        items:
          $ref: '#/definitions/models.User'
        type: array
      participants:
        items:
          $ref: '#/definitions/models.User'
        type: array
      stands:
        description: 'Relations One-to-Many : Une kermesse a plusieurs stands'
        items:
          $ref: '#/definitions/models.Stand'
        type: array
      user:
        $ref: '#/definitions/models.User'
      user_id:
        description: 'Relation Many-to-One : L''utilisateur qui crée la kermesse'
        type: integer
    type: object
  models.Product:
    properties:
      id:
        type: integer
      name:
        type: string
      nb_products:
        type: integer
      picture:
        type: string
      stand_id:
        description: Clé étrangère vers le stand
        type: integer
      type:
        type: string
    type: object
  models.Stand:
    properties:
      conso:
        type: integer
      id:
        type: integer
      kermesse:
        $ref: '#/definitions/models.Kermesse'
      kermesse_id:
        description: Relations avec la kermesse et le gestionnaire du stand (User)
        type: integer
      name:
        type: string
      pts_donnees:
        type: integer
      stocks:
        description: Clé étrangère vers Product
        items:
          $ref: '#/definitions/models.Product'
        type: array
      type:
        type: string
      user:
        $ref: '#/definitions/models.User'
      user_id:
        type: integer
    type: object
  models.Transaction:
    properties:
      date_transaction:
        type: string
      id:
        type: integer
      nb_jetons:
        type: integer
      price:
        type: number
      user:
        allOf:
        - $ref: '#/definitions/models.User'
        description: Association avec l'utilisateur
      user_id:
        description: Relations avec l'utilisateur
        type: integer
    type: object
  models.User:
    properties:
      email:
        type: string
      enfants:
        items:
          $ref: '#/definitions/models.User'
        type: array
      firstname:
        type: string
      id:
        type: integer
      jetons:
        type: integer
      kermesses:
        description: Relations One-to-Many pour les Kermesses et Stands gérés par
          l'utilisateur
        items:
          $ref: '#/definitions/models.Kermesse'
        type: array
      lastname:
        type: string
      parents:
        description: Relations Many-to-Many pour Parents/Enfants
        items:
          $ref: '#/definitions/models.User'
        type: array
      password:
        type: string
      picture:
        type: string
      role:
        description: 1 = ADMIN / 2 = ORGANISATEUR / 3 = TENEUR DE STAND / 4 = PARENT
          / 5 ELEVE
        type: integer
      stands:
        items:
          $ref: '#/definitions/models.Stand'
        type: array
      transactions:
        items:
          $ref: '#/definitions/models.Transaction'
        type: array
    type: object
  requests.KermeseRequest:
    properties:
      name:
        type: string
    type: object
  requests.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  requests.SignupRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      picture:
        type: string
      role:
        type: integer
    required:
    - email
    - first_name
    - last_name
    - password
    type: object
info:
  contact: {}
paths:
  /api/users:
    get:
      description: Récupère la liste de tous les utilisateurs
      parameters:
      - default: Bearer Add access token here
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Erreur serveur interne
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - Bearer: []
      summary: Récupère tous les utilisateurs
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Crée un nouvel utilisateur avec les informations fournies
      parameters:
      - description: Utilisateur à créer
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "500":
          description: Erreur serveur interne
          schema:
            $ref: '#/definitions/gin.H'
      summary: Crée un nouvel utilisateur
      tags:
      - User
  /api/users/{id}:
    delete:
      description: Supprime un utilisateur spécifique
      parameters:
      - default: Bearer Add access token here
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID de l'utilisateur
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Utilisateur non trouvé
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Erreur serveur interne
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - Bearer: []
      summary: Supprime un utilisateur par ID
      tags:
      - User
    get:
      description: Récupère les informations d'un utilisateur spécifique
      parameters:
      - default: Bearer Add access token here
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID de l'utilisateur
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "404":
          description: Utilisateur non trouvé
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Erreur serveur interne
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - Bearer: []
      summary: Récupère un utilisateur par ID
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Met à jour les informations d'un utilisateur spécifique
      parameters:
      - default: Bearer Add access token here
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID de l'utilisateur
        in: path
        name: id
        required: true
        type: integer
      - description: Utilisateur à mettre à jour
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "404":
          description: Utilisateur non trouvé
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Erreur serveur interne
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - Bearer: []
      summary: Met à jour un utilisateur par ID
      tags:
      - User
  /create-kermesse:
    post:
      consumes:
      - application/json
      description: Permet aux user de créé un groupe de groupeVoyage
      parameters:
      - default: Bearer Add access token here
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Données du groupe
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/requests.KermeseRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Groupe créé
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/gin.H'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Voyage non trouvé
          schema:
            $ref: '#/definitions/gin.H'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - Bearer: []
      summary: Créé une kermesse
      tags:
      - Kermesse
  /kermesses:
    get:
      consumes:
      - application/json
      description: Fetches kermesses for admin, organizers, and participants
      parameters:
      - default: Bearer Add access token here
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of kermesses
          schema:
            items:
              $ref: '#/definitions/models.Kermesse'
            type: array
        "401":
          description: User not logged
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - Bearer: []
      summary: Get all Kermesses based on user role
      tags:
      - Kermesse
  /kermesses/{id}:
    get:
      consumes:
      - application/json
      description: Fetch a kermesse by its ID if the user has permission
      parameters:
      - default: Bearer Add access token here
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Kermesse ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Kermesse found
          schema:
            $ref: '#/definitions/models.Kermesse'
        "401":
          description: User not logged
          schema:
            $ref: '#/definitions/gin.H'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Kermesse not found
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - Bearer: []
      summary: Get a Kermesse by its ID
      tags:
      - Kermesse
  /kermesses/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Allows an admin or the creator to update a Kermesse
      parameters:
      - default: Bearer Add access token here
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Kermesse ID
        in: path
        name: id
        required: true
        type: integer
      - description: Kermesse data
        in: body
        name: kermesse
        required: true
        schema:
          $ref: '#/definitions/models.Kermesse'
      produces:
      - application/json
      responses:
        "200":
          description: Kermesse updated
          schema:
            $ref: '#/definitions/models.Kermesse'
        "401":
          description: User not logged
          schema:
            $ref: '#/definitions/gin.H'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Kermesse not found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - Bearer: []
      summary: Delete a Kermesse
      tags:
      - Kermesse
  /kermesses/{id}/update:
    put:
      consumes:
      - application/json
      description: Allows an admin or the creator to update a Kermesse
      parameters:
      - default: Bearer Add access token here
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Kermesse ID
        in: path
        name: id
        required: true
        type: integer
      - description: Kermesse data
        in: body
        name: kermesse
        required: true
        schema:
          $ref: '#/definitions/models.Kermesse'
      produces:
      - application/json
      responses:
        "200":
          description: Kermesse updated
          schema:
            $ref: '#/definitions/models.Kermesse'
        "401":
          description: User not logged
          schema:
            $ref: '#/definitions/gin.H'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Kermesse not found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - Bearer: []
      summary: Update a Kermesse
      tags:
      - Kermesse
  /login:
    post:
      consumes:
      - application/json
      description: login to the app
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/requests.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Connexion réussie
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Bad request
          schema:
            $ref: '#/definitions/gin.H'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Allow you to log and have an JWT Token
      tags:
      - Auth
  /logout:
    post:
      consumes:
      - application/json
      description: Inform the client to delete the token
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Déconnexion réussie
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Bad request
          schema:
            $ref: '#/definitions/gin.H'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - Bearer: []
      summary: Logout
      tags:
      - Auth
  /product/{id}/delete:
    delete:
      description: Supprime un utilisateur spécifique
      parameters:
      - default: Bearer Add access token here
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID de du produit
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: produit non trouvé
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Erreur serveur interne
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - Bearer: []
      summary: Supprime un produit par ID
      tags:
      - Product
  /product/{id}/update:
    put:
      consumes:
      - application/json
      description: Met à jour les informations d'un produit spécifique
      parameters:
      - default: Bearer Add access token here
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID de l'utilisateur
        in: path
        name: id
        required: true
        type: integer
      - description: Produit à mettre à jour
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "404":
          description: Prodduit non trouvé
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Erreur serveur interne
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - Bearer: []
      summary: Met à jour un produit par son ID
      tags:
      - Product
  /products:
    get:
      description: Récupère la liste de tous les produits
      parameters:
      - default: Bearer Add access token here
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
        "500":
          description: Erreur serveur interne
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - Bearer: []
      summary: Récupère tous les produits
      tags:
      - Product
  /profile:
    get:
      consumes:
      - application/json
      description: Retourne les informations du profil de l'utilisateur connecté
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/gin.H'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - Bearer: []
      summary: Récupère le profil de l'utilisateur actuellement connecté
      tags:
      - Auth
  /profile/update:
    put:
      consumes:
      - application/json
      description: Mettre à jour les champs du profil de l'utilisateur authentifié
      parameters:
      - default: Bearer <Ajouter le jeton d'accès ici>
        description: Insérez votre jeton d'accès
        in: header
        name: Authorization
        required: true
        type: string
      - description: Les données du profil à mettre à jour
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/requests.SignupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Profil mis à jour avec succès
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Erreur de validation
          schema:
            $ref: '#/definitions/gin.H'
        "401":
          description: Non autorisé
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Erreur du serveur
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - Bearer: []
      summary: Mise à jour du profil
      tags:
      - Auth
  /signup:
    post:
      consumes:
      - application/json
      description: Create a new user with the provided information
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/requests.SignupRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created
          schema:
            $ref: '#/definitions/requests.SignupRequest'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Bad request
          schema:
            $ref: '#/definitions/gin.H'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Allow you to register as a new User
      tags:
      - Auth
swagger: "2.0"
